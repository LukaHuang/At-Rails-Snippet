# this snippets are sensitive defaults when working with rails, are intended to
# be used when the selected syntax is different thatn Ruby.
'.source.ruby, .source.ruby.rails':
  'it':
    'prefix': 'it'
    'body': 'it "should $1" do\n\t$2\nend'

  'describe':
    'prefix': 'describe'
    'body': 'describe \'when $1\' do\n\t$2\nend'

  'class':
    'prefix': 'class'
    'body': """
      class ${1:ClassName} ${2:< ActiveRecord::Base}
        ${3:\#code}
      end
    """

  'module':
    'prefix': 'module'
    'body': """
      module ${1:ModuleName}
        ${2:\#code}
      end
    """

  'concern':
    'prefix': 'concern'
    'body': """
      module ${1:ConcernName}
        extend ActiveSupport::Concern
        ${2:included do
          # code ...
        end}
        # instance methods go here
        module ClassMethods
          # static methods go here
        end
      end
    """

  'do_block':
    'prefix': ' do' #(space)do here to beat https://github.com/atom/language-ruby/blob/master/snippets/language-ruby.cson#L142
    'body': """
      do ${1:|${2:member}|}
        $3
      end
    """

  'each do':
    'prefix': '.e'
    'body': """
      .each do |${1:member}|
        ${2:\#code...}
      end $3
    """

  'each_with_index':
    'prefix': '.ewi'
    'body': """
      .each_with_index do |${1:member}, ${2:index}|
        ${3:\#code...}
      end $4
    """

  'logger_info':
    'prefix': 'li'
    'body': 'logger.info $1'

  'update_attribute':
    'prefix': '.ua'
    'body': '.update_attribute :${1:attribute}, "${2:new value}"'

  'update_attributes':
    'prefix': '.uas'
    'body': """
      .update_attributes(
        ${1:attribute}: "${2:value1}",
        ${3:attribute_2}: "${4:value2}"
      )
    """

  'else statement':
    'prefix': 'else'
    'body': 'elsif ${1:true}'

  'elsif else statement':
    'prefix': 'elsee'
    'body': """
      elsif ${1:true}
        ${2:\#code}
      else
    """

  'array_iteration':
    'prefix': '=loop'
    'body': """
      ${1:array}.each do |${2:member}|
        $3
      end
    """

  'find':
    'prefix': '.f'
    'body': '.find(${1:params[:id]})'

  'find_by_something':
    'prefix': '.fb'
    'body': '.find_by_${1:name}(${2:params[:${3:${1:name}}]})$4'

  #just if not using atom official ruby syntax::
  'def':
    'prefix': 'def'
    'body': """
      def ${1:method}
        ${2:\#code}
      end
    """
